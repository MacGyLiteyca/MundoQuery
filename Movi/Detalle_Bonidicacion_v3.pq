let
    Cumplimiento_Citas = let
        Source = ProduccionTecnicos,
        Filtered_Extension = Table.SelectRows(Source, each ([Extension] = ".txt")),
        Filtered_Folder_Path = Table.SelectRows(Filtered_Extension, each Text.Contains([Folder Path], "\CalculoBonificacion\Cumplimiento de Citas\")),
        Added_Year = Table.AddColumn(Filtered_Folder_Path, "Año", each Text.BetweenDelimiters([Name], "_", ".", 1, 0), type text),
        Added_Mes = Table.AddColumn(Added_Year, "Mes", each Text.BetweenDelimiters([Name], "_", "_"), type text),
        Changed_Type_Date = Table.TransformColumnTypes(Added_Mes,{{"Año", Int64.Type}, {"Mes", Int64.Type}}),
        Merged_Mes_Actu = Table.NestedJoin(Changed_Type_Date, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Name = Table.SelectRows(Merged_Mes_Actu, each [Name] <> null and [Name] <> ""),
        Transform_Content = Table.TransformColumns(Filtered_Null_Name, {"Content", each Csv.Document(_,[Delimiter="Õ", Columns=33, Encoding=1252, QuoteStyle=QuoteStyle.None])}),
        Expanded_Content = Transform_Content{0}[Content],
        Filtered_Separador = Table.SelectRows(Expanded_Content, each not Text.Contains([Column1], "-")),
        Filtered_Null_Column2 = Table.SelectRows(Filtered_Separador, each [Column2] <> null and [Column2] <> ""),
        Promoted_Headers = Table.PromoteHeaders(Filtered_Null_Column2, [PromoteAllScalars=true]),
        Renamed_Fecha_cita_agendamiento = try(Table.RenameColumns(Promoted_Headers,{{"Fecha cita agendamiento", "Fecha_cita_agendamiento"}}))otherwise(Promoted_Headers),
        Filtered_Null_Fecha = Table.SelectRows(Renamed_Fecha_cita_agendamiento, each [Fecha_cita_agendamiento] <> null and [Fecha_cita_agendamiento] <> ""),
        Transform_Fecha = Table.TransformColumns(Filtered_Null_Fecha,{{"Fecha_cita_agendamiento", each Date.From(Value.FromText(_)), type date}}),
        Filtered_Exclusiones_Contrato = Table.SelectRows(Transform_Fecha, each [exclusiones_contrato] = "NULL"),
        Removed_Other_Columns = Table.SelectColumns(Filtered_Exclusiones_Contrato,{"SLA", "Fecha_cita_agendamiento", "AÑO_CIERRE", "MES_CIERRE", "Pet_atis", "Departamento", "Numero_de_actuacion", "external_id"}),
        Replaced_NULL_null = Table.ReplaceValue(Removed_Other_Columns,"NULL",null,Replacer.ReplaceValue,{"SLA", "Pet_atis", "Departamento", "Numero_de_actuacion", "external_id"}),
        Changed_Type = Table.TransformColumnTypes(Replaced_NULL_null,{{"SLA", type text}, {"Fecha_cita_agendamiento", type date}, {"Pet_atis", type text}, {"Departamento", type text}, {"Numero_de_actuacion", type text}, {"external_id", type text}, {"AÑO_CIERRE", Int64.Type}, {"MES_CIERRE", Int64.Type}}),
        Trimmed_Text = Table.TransformColumns(Changed_Type,{{"SLA", Text.Trim, type text}, {"Pet_atis", Text.Trim, type text}, {"Departamento", Text.Trim, type text}, {"Numero_de_actuacion", Text.Trim, type text}, {"external_id", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"SLA", Text.Clean, type text}, {"Pet_atis", Text.Clean, type text}, {"Departamento", Text.Clean, type text}, {"Numero_de_actuacion", Text.Clean, type text}, {"external_id", Text.Clean, type text}}),
        Capitalized_Each_Word = Table.TransformColumns(Cleaned_Text,{{"SLA", Text.Proper, type text}, {"Departamento", Text.Proper, type text}}),
        Renamed_Columns = Table.RenameColumns(Capitalized_Each_Word,{{"Fecha_cita_agendamiento", "Fecha"}, {"Pet_atis", "Atis"}, {"Numero_de_actuacion", "ATiempo"}, {"AÑO_CIERRE", "Año"}, {"MES_CIERRE", "Mes"}}),
        Filtered_Null_Atis = Table.SelectRows(Renamed_Columns, each [Atis] <> null and [Atis] <> ""),
        Filtered_Null_CC_Tec = Table.SelectRows(Filtered_Null_Atis, each [external_id] <> null and [external_id] <> ""),
        Merged_Tbl_Departamentos = Table.NestedJoin(Filtered_Null_CC_Tec, {"Departamento"}, Tbl_Departamentos, {"Departamento"}, "TblDepartamentos", JoinKind.RightOuter),
        Filtered_Null_Dep = Table.SelectRows(Merged_Tbl_Departamentos, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Columns = Table.RemoveColumns(Filtered_Null_Dep,{"TblDepartamentos"}),
        Added_Cantidad = Table.AddColumn(Removed_Columns, "Cantidad", each 1, type number),
        Pivoted_SLA = Table.Pivot(Added_Cantidad, List.Distinct(Added_Cantidad[SLA]), "SLA", "Cantidad", List.Sum),
        Replaced_Null__No_Cumple = try(Table.ReplaceValue(Pivoted_SLA,null,0,Replacer.ReplaceValue,{"No Cumple"})) otherwise(Table.AddColumn(Pivoted_SLA, "No Cumple", each 0, type number)),
        Replaced_Null__Cumple = try(Table.ReplaceValue(Replaced_Null__No_Cumple,null,0,Replacer.ReplaceValue,{"Cumple"})) otherwise(Table.AddColumn(Replaced_Null__No_Cumple, "Cumple", each 0, type number)),
        Added_Aperturas = Table.AddColumn(Replaced_Null__Cumple, "Aperturas", each "Cumplimiento de citas", type text),
        Added_Productos = Table.AddColumn(Added_Aperturas, "Productos", each "TOTAL", type text),
        Removed_Duplicates = Table.Distinct(Added_Productos)
    in
        Removed_Duplicates,

    Tablas_Base = let
        Source = ProduccionTecnicos,
        Filtered_Extension = Table.SelectRows(Source, each [Extension] = ".xlsx"),
        Filtered_Folder = Table.SelectRows(Filtered_Extension, each Text.Contains([Folder Path], "\VersionesBI\V12 Mac\")),
        Filtered_Name = Table.SelectRows(Filtered_Folder, each Text.StartsWith([Name], "Tablas Base")),
        Removed_Other_Columns = Table.SelectColumns(Filtered_Name,{"Content"}),
        Transform_Content = Table.TransformColumns(Removed_Other_Columns, {"Content", each Excel.Workbook(_)}),
        Expanded_Content = Table.ExpandTableColumn(Transform_Content, "Content", {"Name", "Data", "Item", "Kind", "Hidden"}, {"Name", "Data", "Item", "Kind", "Hidden"}),
        Filtered_Kind_Table = Table.SelectRows(Expanded_Content, each [Kind] = "Table")
    in
        Filtered_Kind_Table,

    Tbl_Departamentos = let
        Source = Tablas_Base,
        #"Filtered Rows" = Source{[Item="TblDepartamentos"]}[Data],
        Trimmed_Departamento = Table.TransformColumns(#"Filtered Rows",{{"Departamento", Text.Trim, type text}}),
        Cleaned_Departamento = Table.TransformColumns(Trimmed_Departamento,{{"Departamento", Text.Clean, type text}}),
        Capitalized_Departamento = Table.TransformColumns(Cleaned_Departamento,{{"Departamento", Text.Proper, type text}}),
        Invoke_fxCalendario_Mes = fxMiCalendarioMes(Capitalized_Departamento, "FechaInicio", "FechaFin"),
        Merged_Mes_Act = Table.NestedJoin(Invoke_fxCalendario_Mes, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Departamento = Table.SelectRows(Merged_Mes_Act, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Column_Mes_Act = Table.RemoveColumns(Filtered_Null_Departamento,{"Mes_Actualizar"})
    in
        Removed_Column_Mes_Act,

    Plazo_3_Dias = let
        Source = ProduccionTecnicos,
        Filtered_Extension = Table.SelectRows(Source, each ([Extension] = ".txt")),
        Filtered_Folder_Path = Table.SelectRows(Filtered_Extension, each Text.Contains([Folder Path], "\CalculoBonificacion\Plazos\")),
        Added_Year = Table.AddColumn(Filtered_Folder_Path, "Año", each Text.BetweenDelimiters([Name], "_", ".", 1, 0), type text),
        Added_Mes = Table.AddColumn(Added_Year, "Mes", each Text.BetweenDelimiters([Name], "_", "_"), type text),
        Changed_Type_Date = Table.TransformColumnTypes(Added_Mes,{{"Año", Int64.Type}, {"Mes", Int64.Type}}),
        Merged_Mes_Actu = Table.NestedJoin(Changed_Type_Date, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Name = Table.SelectRows(Merged_Mes_Actu, each [Name] <> null and [Name] <> ""),
        Transform_Content = Table.TransformColumns(Filtered_Null_Name, {"Content", each Csv.Document(_,[Delimiter="Õ", Columns=45, Encoding=1252, QuoteStyle=QuoteStyle.None])}),
        Expanded_Content = Transform_Content{0}[Content],
        Filtered_Separador = Table.SelectRows(Expanded_Content, each not Text.Contains([Column1], "-")),
        Filtered_Null_Column2 = Table.SelectRows(Filtered_Separador, each [Column2] <> null and [Column2] <> ""),
        Promoted_Headers = Table.PromoteHeaders(Filtered_Null_Column2, [PromoteAllScalars=true]),
        Filtered_Null_Fecha = Table.SelectRows(Promoted_Headers, each [Fecha_de_cierre_final] <> null and [Fecha_de_cierre_final] <> ""),
        Transform_Fecha = Table.TransformColumns(Filtered_Null_Fecha,{{"Fecha_de_cierre_final", each Date.From(Value.FromText(_)), type date}}),
        Removed_Other_Columns = Table.SelectColumns(Transform_Fecha,{"CUMPLE_SLA_3D", "DEPARTAMENTO", "Pet_atis", "Identificador_PC_Linea", "Fecha_de_cierre_final", "AÑO_CIERRE", "MES_CIERRE", "external_id"}),
        Replaced_NULL_null = Table.ReplaceValue(Removed_Other_Columns,"NULL",null,Replacer.ReplaceValue,{"CUMPLE_SLA_3D", "DEPARTAMENTO", "Pet_atis", "Identificador_PC_Linea", "external_id", "AÑO_CIERRE", "MES_CIERRE"}),
        Changed_Type = Table.TransformColumnTypes(Replaced_NULL_null,{{"CUMPLE_SLA_3D", type text}, {"Pet_atis", type text}, {"Identificador_PC_Linea", type text}, {"Fecha_de_cierre_final", type date}, {"external_id", type text}, {"DEPARTAMENTO", type text}, {"AÑO_CIERRE", Int64.Type}, {"MES_CIERRE", Int64.Type}}),
        Trimmed_Text = Table.TransformColumns(Changed_Type,{{"CUMPLE_SLA_3D", Text.Trim, type text}, {"Pet_atis", Text.Trim, type text}, {"Identificador_PC_Linea", Text.Trim, type text}, {"external_id", Text.Trim, type text}, {"DEPARTAMENTO", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"CUMPLE_SLA_3D", Text.Clean, type text}, {"Pet_atis", Text.Clean, type text}, {"Identificador_PC_Linea", Text.Clean, type text}, {"external_id", Text.Clean, type text}, {"DEPARTAMENTO", Text.Clean, type text}}),
        Capitalized_Each_Word = Table.TransformColumns(Cleaned_Text,{{"DEPARTAMENTO", Text.Proper, type text}}),
        Renamed_Columns = Table.RenameColumns(Capitalized_Each_Word,{{"DEPARTAMENTO", "Departamento"}, {"Pet_atis", "Atis"}, {"Identificador_PC_Linea", "ATiempo"}, {"Fecha_de_cierre_final", "Fecha"}, {"AÑO_CIERRE", "Año"}, {"MES_CIERRE", "Mes"}}),
        Filtered_Null_Atis = Table.SelectRows(Renamed_Columns, each [Atis] <> null and [Atis] <> ""),
        Filtered_Null_CC_Tec = Table.SelectRows(Filtered_Null_Atis, each [external_id] <> null and [external_id] <> ""),
        Merged_Tbl_Departamentos = Table.NestedJoin(Filtered_Null_CC_Tec, {"Departamento"}, Tbl_Departamentos, {"Departamento"}, "TblDepartamentos", JoinKind.RightOuter),
        Filtered_Null_Dep = Table.SelectRows(Merged_Tbl_Departamentos, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Columns = Table.RemoveColumns(Filtered_Null_Dep,{"TblDepartamentos"}),
        Added_Cantidad = Table.AddColumn(Removed_Columns, "Cantidad", each 1, type number),
        Replaced_No_Cumple_SLA = Table.ReplaceValue(Added_Cantidad,"NO","No Cumple",Replacer.ReplaceText,{"CUMPLE_SLA_3D"}),
        Replaced_Cumple_SLA = Table.ReplaceValue(Replaced_No_Cumple_SLA,"SI","Cumple",Replacer.ReplaceText,{"CUMPLE_SLA_3D"}),
        Pivoted_SLA = Table.Pivot(Replaced_Cumple_SLA, List.Distinct(Replaced_Cumple_SLA[CUMPLE_SLA_3D]), "CUMPLE_SLA_3D", "Cantidad", List.Sum),
        Replaced_Null__No_Cumple = try(Table.ReplaceValue(Pivoted_SLA,null,0,Replacer.ReplaceValue,{"No Cumple"})) otherwise(Table.AddColumn(Pivoted_SLA, "No Cumple", each 0, type number)),
        Replaced_Null__Cumple = try(Table.ReplaceValue(Replaced_Null__No_Cumple,null,0,Replacer.ReplaceValue,{"Cumple"})) otherwise(Table.AddColumn(Replaced_Null__No_Cumple, "Cumple", each 0, type number)),
        Added_Aperturas = Table.AddColumn(Replaced_Null__Cumple, "Aperturas", each "Plazos de Mtto (3 días)", type text),
        Added_Productos = Table.AddColumn(Added_Aperturas, "Productos", each "Todos", type text),
        Removed_Duplicates = Table.Distinct(Added_Productos)
    in
        Removed_Duplicates,

    Plazos = let
        Source = ProduccionTecnicos,
        Filtered_Extension = Table.SelectRows(Source, each ([Extension] = ".txt")),
        Filtered_Folder_Path = Table.SelectRows(Filtered_Extension, each Text.Contains([Folder Path], "\CalculoBonificacion\Plazos\")),
        Added_Year = Table.AddColumn(Filtered_Folder_Path, "Año", each Text.BetweenDelimiters([Name], "_", ".", 1, 0), type text),
        Added_Mes = Table.AddColumn(Added_Year, "Mes", each Text.BetweenDelimiters([Name], "_", "_"), type text),
        Changed_Type_Date = Table.TransformColumnTypes(Added_Mes,{{"Año", Int64.Type}, {"Mes", Int64.Type}}),
        Merged_Mes_Actu = Table.NestedJoin(Changed_Type_Date, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Name = Table.SelectRows(Merged_Mes_Actu, each [Name] <> null and [Name] <> ""),
        Transform_Content = Table.TransformColumns(Filtered_Null_Name, {"Content", each Csv.Document(_,[Delimiter="Õ", Columns=45, Encoding=1252, QuoteStyle=QuoteStyle.None])}),
        Expanded_Content = Transform_Content{0}[Content],
        Filtered_Separador = Table.SelectRows(Expanded_Content, each not Text.Contains([Column1], "-")),
        Filtered_Null_Column2 = Table.SelectRows(Filtered_Separador, each [Column2] <> null and [Column2] <> ""),
        Promoted_Headers = Table.PromoteHeaders(Filtered_Null_Column2, [PromoteAllScalars=true]),
        Filtered_Null_Fecha = Table.SelectRows(Promoted_Headers, each [Fecha_de_cierre_final] <> null and [Fecha_de_cierre_final] <> ""),
        Transform_Fecha = Table.TransformColumns(Filtered_Null_Fecha,{{"Fecha_de_cierre_final", each Date.From(Value.FromText(_)), type date}}),
        Removed_Other_Columns = Table.SelectColumns(Transform_Fecha,{"CUMPLE_SLA", "ALTO_VALOR", "DEPARTAMENTO", "Pet_atis", "Identificador_PC_Linea", "Fecha_de_cierre_final", "AÑO_CIERRE", "MES_CIERRE", "external_id"}),
        Replaced_NULL_null = Table.ReplaceValue(Removed_Other_Columns,"NULL",null,Replacer.ReplaceValue,{"CUMPLE_SLA", "ALTO_VALOR", "DEPARTAMENTO", "Pet_atis", "Identificador_PC_Linea", "external_id"}),
        Changed_Type = Table.TransformColumnTypes(Replaced_NULL_null,{{"CUMPLE_SLA", type text}, {"ALTO_VALOR", type text}, {"Pet_atis", type text}, {"Identificador_PC_Linea", type text}, {"Fecha_de_cierre_final", type date}, {"external_id", type text}, {"DEPARTAMENTO", type text}, {"AÑO_CIERRE", Int64.Type}, {"MES_CIERRE", Int64.Type}}),
        Trimmed_Text = Table.TransformColumns(Changed_Type,{{"CUMPLE_SLA", Text.Trim, type text}, {"ALTO_VALOR", Text.Trim, type text}, {"Pet_atis", Text.Trim, type text}, {"Identificador_PC_Linea", Text.Trim, type text}, {"external_id", Text.Trim, type text}, {"DEPARTAMENTO", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"CUMPLE_SLA", Text.Clean, type text}, {"ALTO_VALOR", Text.Clean, type text}, {"Pet_atis", Text.Clean, type text}, {"Identificador_PC_Linea", Text.Clean, type text}, {"external_id", Text.Clean, type text}, {"DEPARTAMENTO", Text.Clean, type text}}),
        Capitalized_Each_Word = Table.TransformColumns(Cleaned_Text,{{"DEPARTAMENTO", Text.Proper, type text}}),
        Renamed_Columns = Table.RenameColumns(Capitalized_Each_Word,{{"DEPARTAMENTO", "Departamento"}, {"Pet_atis", "Atis"}, {"Identificador_PC_Linea", "ATiempo"}, {"Fecha_de_cierre_final", "Fecha"}, {"AÑO_CIERRE", "Año"}, {"MES_CIERRE", "Mes"}}),
        Filtered_Null_Atis = Table.SelectRows(Renamed_Columns, each [Atis] <> null and [Atis] <> ""),
        Filtered_Null_CC_Tec = Table.SelectRows(Filtered_Null_Atis, each [external_id] <> null and [external_id] <> ""),
        Merged_Tbl_Departamentos = Table.NestedJoin(Filtered_Null_CC_Tec, {"Departamento"}, Tbl_Departamentos, {"Departamento"}, "TblDepartamentos", JoinKind.RightOuter),
        Filtered_Null_Dep = Table.SelectRows(Merged_Tbl_Departamentos, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Columns = Table.RemoveColumns(Filtered_Null_Dep,{"TblDepartamentos"}),
        Added_Cantidad = Table.AddColumn(Removed_Columns, "Cantidad", each 1, type number),
        Replaced_No_Cumple_SLA = Table.ReplaceValue(Added_Cantidad,"NO","No Cumple",Replacer.ReplaceText,{"CUMPLE_SLA"}),
        Replaced_Cumple_SLA = Table.ReplaceValue(Replaced_No_Cumple_SLA,"SI","Cumple",Replacer.ReplaceText,{"CUMPLE_SLA"}),
        Pivoted_SLA = Table.Pivot(Replaced_Cumple_SLA, List.Distinct(Replaced_Cumple_SLA[CUMPLE_SLA]), "CUMPLE_SLA", "Cantidad", List.Sum),
        Replaced_Null__No_Cumple = try(Table.ReplaceValue(Pivoted_SLA,null,0,Replacer.ReplaceValue,{"No Cumple"})) otherwise(Table.AddColumn(Pivoted_SLA, "No Cumple", each 0, type number)),
        Replaced_Null__Cumple = try(Table.ReplaceValue(Replaced_Null__No_Cumple,null,0,Replacer.ReplaceValue,{"Cumple"})) otherwise(Table.AddColumn(Replaced_Null__No_Cumple, "Cumple", each 0, type number)),
        Added_Aperturas = Table.AddColumn(Replaced_Null__Cumple, "Aperturas", each "Plazos de Mtto (3 días)", type text),
        Added_Productos = Table.AddColumn(Added_Aperturas, "Productos", each if([ALTO_VALOR]="SI")then("FTTH y/o Alto valor(AM-PM)")else("Masivos (1día)"), type text),
        Removed_Duplicates = Table.Distinct(Added_Productos),
        Removed_Alto_valor = Table.RemoveColumns(Removed_Duplicates,{"ALTO_VALOR"})
    in
        Removed_Alto_valor,

    Reitero = let
        Source = ProduccionTecnicos,
        Filtered_Extension = Table.SelectRows(Source, each [Extension] = ".txt"),
        Filtered_Folder_Path = Table.SelectRows(Filtered_Extension, each Text.Contains([Folder Path], "\CalculoBonificacion\Reitero\")),
        Added_Year = Table.AddColumn(Filtered_Folder_Path, "Año", each Text.BetweenDelimiters([Name], "_", ".", 1, 0), type text),
        Added_Mes = Table.AddColumn(Added_Year, "Mes", each Text.BetweenDelimiters([Name], "_", "_"), type text),
        Changed_Type_Date = Table.TransformColumnTypes(Added_Mes,{{"Año", Int64.Type}, {"Mes", Int64.Type}}),
        Merged_Mes_Actu = Table.NestedJoin(Changed_Type_Date, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Name = Table.SelectRows(Merged_Mes_Actu, each [Name] <> null and [Name] <> ""),
        Transform_Content = Table.TransformColumns(Filtered_Null_Name, {"Content", each Csv.Document(_,[Delimiter="Õ", Columns=73, Encoding=1252, QuoteStyle=QuoteStyle.None])}),
        Expanded_Content = Transform_Content{0}[Content],
        Filtered_Separador = Table.SelectRows(Expanded_Content, each not Text.Contains([Column1], "-")),
        Filtered_Null_Column2 = Table.SelectRows(Filtered_Separador, each [Column2] <> null and [Column2] <> ""),
        Promoted_Headers = Table.PromoteHeaders(Filtered_Null_Column2, [PromoteAllScalars=true]),
        Renamed_Medio_Acceso = try(Table.RenameColumns(Promoted_Headers,{{"Medio de Acceso", "Medio_de_Acceso"}}))otherwise(Promoted_Headers),
        Renamed_Atis = try(Table.RenameColumns(Renamed_Medio_Acceso,{{"Pet atis", "Pet_atis"}}))otherwise(Renamed_Medio_Acceso),
        Renamed_Identificador_Linea = try(Table.RenameColumns(Renamed_Atis,{{"Identificador PC Linea", "Identificador_PC_Linea"}}))otherwise(Renamed_Atis),
        Renamed_Fecha_Final = try(Table.RenameColumns(Renamed_Identificador_Linea,{{"Fecha de cierre final", "Fecha_de_cierre_final"}}))otherwise(Renamed_Identificador_Linea),
        Filtered_Null_Fecha = Table.SelectRows(Renamed_Fecha_Final, each [Fecha_de_cierre_final] <> null and [Fecha_de_cierre_final] <> ""),
        Transform_Fecha = Table.TransformColumns(Filtered_Null_Fecha,{{"Fecha_de_cierre_final", each Date.From(Value.FromText(_)), type date}}),
        Removed_Other_Columns = Table.SelectColumns(Transform_Fecha,{"Pet_atis", "Identificador_PC_Linea", "Fecha_de_cierre_final", "AÑO_CIERRE", "MES_CIERRE", "Familia", "Medio_de_Acceso", "DEPARTAMENTO", "external_id", "APERTURA_AV", "CIERRE_AV", "external_id_MTTOA"}),
        Replaced_NULL_Null = Table.ReplaceValue(Removed_Other_Columns,"NULL",null,Replacer.ReplaceValue,{"Pet_atis", "Identificador_PC_Linea", "Familia", "Medio_de_Acceso", "DEPARTAMENTO", "external_id", "APERTURA_AV", "CIERRE_AV", "external_id_MTTOA"}),
        Changed_Type = Table.TransformColumnTypes(Replaced_NULL_Null,{{"Pet_atis", type text}, {"APERTURA_AV", type text}, {"CIERRE_AV", type text}, {"Medio_de_Acceso", type text}, {"AÑO_CIERRE", Int64.Type}, {"MES_CIERRE", Int64.Type}, {"Identificador_PC_Linea", type text}, {"Fecha_de_cierre_final", type date}, {"Familia", type text}, {"DEPARTAMENTO", type text}, {"external_id", type text}, {"external_id_MTTOA", type text}}),
        Trimmed_Text = Table.TransformColumns(Changed_Type,{{"Pet_atis", Text.Trim, type text}, {"Identificador_PC_Linea", Text.Trim, type text}, {"Familia", Text.Trim, type text}, {"Medio_de_Acceso", Text.Trim, type text}, {"DEPARTAMENTO", Text.Trim, type text}, {"external_id", Text.Trim, type text}, {"APERTURA_AV", Text.Trim, type text}, {"CIERRE_AV", Text.Trim, type text}, {"external_id_MTTOA", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"Pet_atis", Text.Clean, type text}, {"Identificador_PC_Linea", Text.Clean, type text}, {"Familia", Text.Clean, type text}, {"Medio_de_Acceso", Text.Clean, type text}, {"DEPARTAMENTO", Text.Clean, type text}, {"external_id", Text.Clean, type text}, {"APERTURA_AV", Text.Clean, type text}, {"CIERRE_AV", Text.Clean, type text}, {"external_id_MTTOA", Text.Clean, type text}}),
        Capitalized_Each_Word = Table.TransformColumns(Cleaned_Text,{{"DEPARTAMENTO", Text.Proper, type text}}),
        Renamed_Columns = Table.RenameColumns(Capitalized_Each_Word,{{"Pet_atis", "Atis"}, {"Identificador_PC_Linea", "ATiempo"}, {"Fecha_de_cierre_final", "Fecha"}, {"AÑO_CIERRE", "Año"}, {"MES_CIERRE", "Mes"}, {"DEPARTAMENTO", "Departamento"}}),
        Filtered_Null_Atis = Table.SelectRows(Renamed_Columns, each [Atis] <> null and [Atis] <> ""),
        Merged_Tbl_Departamentos = Table.NestedJoin(Filtered_Null_Atis, {"Departamento"}, Tbl_Departamentos, {"Departamento"}, "TblDepartamentos", JoinKind.RightOuter),
        Filtered_Null_Departamento = Table.SelectRows(Merged_Tbl_Departamentos, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Tbl_Departamentos = Table.RemoveColumns(Filtered_Null_Departamento,{"TblDepartamentos"}),
        Added_Aperturas = Table.AddColumn(Removed_Tbl_Departamentos, "Aperturas", each "Averías reiteradas", type text),
        Added_Productos = Table.AddColumn(Added_Aperturas, "Productos", each if(([Medio_de_Acceso]="COBRE")and(([Familia]="DTH")or([Familia]="TV")))then("TV-DTH")else(if(([Medio_de_Acceso]="COBRE")and(([Familia]="DUO")or([Familia]="DUOS")))then("LB BA")else(if(([Medio_de_Acceso]="FIBRA") and ([Familia]="TV"))then("TV-IPTV")else(if(([Medio_de_Acceso]="FIBRA")and([Familia]="DUOS"))then("FTTH")else(if(([Medio_de_Acceso]="FIBRA")and([Familia]="TRIO"))then("FIBRA")else("LB"))))), type text),
        Added_No_Cumple = Table.AddColumn(Added_Productos, "No Cumple", each if([external_id_MTTOA]=null)then(0)else(1), type number),
        Selected_Columns_No_Cumple = Table.SelectColumns(Added_No_Cumple,{"Atis", "ATiempo", "Fecha", "Año", "Mes", "Departamento", "external_id_MTTOA", "Aperturas", "Productos", "No Cumple"}),
        Filtered_External_Mtto = Table.SelectRows(Selected_Columns_No_Cumple, each [external_id_MTTOA] <> null and [external_id_MTTOA] <> ""),
        Renamed_Columns_No_Cumple = Table.RenameColumns(Filtered_External_Mtto,{{"external_id_MTTOA", "external_id"}}),
        Added_Cumple = Table.AddColumn(Added_Productos, "Cumple", each if([external_id]=null)then(0)else(1), type number),
        Filtered_Null_External_Id_Mtto = Table.SelectRows(Added_Cumple, each [external_id_MTTOA] = null),
        Selected_Columns_Cumple = Table.SelectColumns(Filtered_Null_External_Id_Mtto,{"Atis", "ATiempo", "Fecha", "Año", "Mes", "Departamento", "external_id", "Aperturas", "Productos", "Cumple"}),
        Filtered_External = Table.SelectRows(Selected_Columns_Cumple, each [external_id] <> null and [external_id] <> ""),
        Appended_Query = Table.Combine({Filtered_External, Renamed_Columns_No_Cumple}),
        Replaced_Null = Table.ReplaceValue(Appended_Query,null,0,Replacer.ReplaceValue,{"Cumple", "No Cumple"})
    in
        Replaced_Null,

    Infancia = let
        Source = ProduccionTecnicos,
        Filtered_Extension = Table.SelectRows(Source, each ([Extension] = ".txt")),
        Filtered_Folder_Path = Table.SelectRows(Filtered_Extension, each Text.Contains([Folder Path], "\CalculoBonificacion\Infancia\")),
        Added_Year = Table.AddColumn(Filtered_Folder_Path, "Año", each Text.BetweenDelimiters([Name], "_", ".", 1, 0), type text),
        Added_Mes = Table.AddColumn(Added_Year, "Mes", each Text.BetweenDelimiters([Name], "_", "_"), type text),
        Changed_Type_Date = Table.TransformColumnTypes(Added_Mes,{{"Año", Int64.Type}, {"Mes", Int64.Type}}),
        Merged_Mes_Actu = Table.NestedJoin(Changed_Type_Date, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Name = Table.SelectRows(Merged_Mes_Actu, each [Name] <> null and [Name] <> ""),
        Transform_Content = Table.TransformColumns(Filtered_Null_Name, {"Content", each Csv.Document(_,[Delimiter="Õ", Columns=43, Encoding=1252, QuoteStyle=QuoteStyle.None])}),
        Expanded_Content = Transform_Content{0}[Content],
        Filtered_Separador = Table.SelectRows(Expanded_Content, each not Text.Contains([Column1], "-")),
        Filtered_Null_Column2 = Table.SelectRows(Filtered_Separador, each [Column2] <> null and [Column2] <> ""),
        Promoted_Headers = Table.PromoteHeaders(Filtered_Null_Column2, [PromoteAllScalars=true]),
        Renamed_Actuacion_Alta = try(Table.RenameColumns(Promoted_Headers,{{"XA_ACTUACION ALTA", "XA_ACTUACION_ALTA"}}))otherwise(Promoted_Headers),
        Renamed_Atis_Alta = try(Table.RenameColumns(Renamed_Actuacion_Alta,{{"Pet atis ALTA", "Pet_atis_ALTA"}}))otherwise(Renamed_Actuacion_Alta),
        Renamed_Medio_Alta = try(Table.RenameColumns(Renamed_Atis_Alta,{{"Medio de Acceso ALTA", "Medio_de_Acceso_ALTA"}}))otherwise(Renamed_Atis_Alta),
        Renamed_Fecha_Final_Alta = try(Table.RenameColumns(Renamed_Medio_Alta,{{"Fecha de cierre final ALTA", "Fecha_de_cierre_final_ALTA"}}))otherwise(Renamed_Medio_Alta),
        Filtered_Null_Fecha = Table.SelectRows(Renamed_Fecha_Final_Alta, each [Fecha_de_cierre_final_ALTA] <> null and [Fecha_de_cierre_final_ALTA] <> ""),
        Transform_Fecha = Table.TransformColumns(Filtered_Null_Fecha,{{"Fecha_de_cierre_final_ALTA", each Date.From(Value.FromText(_)), type date}}),
        Removed_Other_Columns = Table.SelectColumns(Transform_Fecha,{"XA_ACTUACION_ALTA", "Pet_atis_ALTA", "PRODUCTO", "Medio_de_Acceso_ALTA", "Departamento_ALTA", "Fecha_de_cierre_final_ALTA", "external_id", "CIERRE_AV", "APERTURA_AV"}),
        Added_Year_2 = Table.AddColumn(Removed_Other_Columns, "Año", each Date.Year(Date.AddMonths(DateTime.From([Fecha_de_cierre_final_ALTA]), 1)), Int64.Type),
        Added_Mes_2 = Table.AddColumn(Added_Year_2, "Mes", each Date.Month(Date.AddMonths(DateTime.From([Fecha_de_cierre_final_ALTA]), 1)), Int64.Type),
        Replaced_NULL_null = Table.ReplaceValue(Added_Mes_2,"NULL",null,Replacer.ReplaceValue,{"XA_ACTUACION_ALTA", "Pet_atis_ALTA", "PRODUCTO", "Medio_de_Acceso_ALTA", "Departamento_ALTA", "external_id", "CIERRE_AV", "APERTURA_AV"}),
        Changed_Type = Table.TransformColumnTypes(Replaced_NULL_null,{{"XA_ACTUACION_ALTA", type text}, {"Pet_atis_ALTA", type text}, {"PRODUCTO", type text}, {"Medio_de_Acceso_ALTA", type text}, {"Departamento_ALTA", type text}, {"Fecha_de_cierre_final_ALTA", type date}, {"external_id", type text}, {"CIERRE_AV", type text}, {"APERTURA_AV", type text}}),
        Trimmed_Text = Table.TransformColumns(Changed_Type,{{"XA_ACTUACION_ALTA", Text.Trim, type text}, {"Pet_atis_ALTA", Text.Trim, type text}, {"PRODUCTO", Text.Trim, type text}, {"Medio_de_Acceso_ALTA", Text.Trim, type text}, {"Departamento_ALTA", Text.Trim, type text}, {"external_id", Text.Trim, type text}, {"CIERRE_AV", Text.Trim, type text}, {"APERTURA_AV", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"XA_ACTUACION_ALTA", Text.Clean, type text}, {"Pet_atis_ALTA", Text.Clean, type text}, {"PRODUCTO", Text.Clean, type text}, {"Medio_de_Acceso_ALTA", Text.Clean, type text}, {"Departamento_ALTA", Text.Clean, type text}, {"external_id", Text.Clean, type text}, {"CIERRE_AV", Text.Clean, type text}, {"APERTURA_AV", Text.Clean, type text}}),
        Capitalized_Each_Word = Table.TransformColumns(Cleaned_Text,{{"Departamento_ALTA", Text.Proper, type text}}),
        Renamed_Columns = Table.RenameColumns(Capitalized_Each_Word,{{"Departamento_ALTA", "Departamento"}, {"XA_ACTUACION_ALTA", "ATiempo"}, {"Pet_atis_ALTA", "Atis"}, {"Fecha_de_cierre_final_ALTA", "Fecha"}}),
        Filtered_Null_Atis = Table.SelectRows(Renamed_Columns, each [Atis] <> null and [Atis] <> ""),
        Filtered_Null_CC_Tec = Table.SelectRows(Filtered_Null_Atis, each [external_id] <> null and [external_id] <> ""),
        Merged_Tbl_Departamentos = Table.NestedJoin(Filtered_Null_CC_Tec, {"Departamento"}, Tbl_Departamentos, {"Departamento"}, "TblDepartamentos", JoinKind.RightOuter),
        Filtered_Null_Dep = Table.SelectRows(Merged_Tbl_Departamentos, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Columns = Table.RemoveColumns(Filtered_Null_Dep,{"TblDepartamentos"}),
        Added_No_Cumple = Table.AddColumn(Removed_Columns, "No Cumple", each 1, type number),
        Added_Productos = Table.AddColumn(Added_No_Cumple, "Productos", each if([PRODUCTO]="DUO") and ([Medio_de_Acceso_ALTA]="FIBRA") then("FTTH") else(if([Medio_de_Acceso_ALTA]="COBRE") and (([PRODUCTO]="DUO") or ([PRODUCTO]="LB"))then("LB+BA")else([PRODUCTO])), type text),
        Replaced_IPTV = Table.ReplaceValue(Added_Productos,"IP_TV","TV (IPTV)",Replacer.ReplaceText,{"Productos"}),
        Removed_Duplicates = Table.Distinct(Replaced_IPTV),
        Removed_Other_Columns_Fin = Table.SelectColumns(Removed_Duplicates,{"ATiempo", "Atis", "Departamento", "Fecha", "external_id", "Año", "Mes", "No Cumple", "Productos"}),
        Appended_Altas_Mes_Ant = Table.Combine({Removed_Other_Columns_Fin, Altas_Mes_Anterior}),
        Replaced_Null_Cumple_No_Cumple = Table.ReplaceValue(Appended_Altas_Mes_Ant,null,0,Replacer.ReplaceValue,{"No Cumple", "Cumple"}),
        Added_Aperturas = Table.AddColumn(Replaced_Null_Cumple_No_Cumple, "Aperturas", each "Cumplimiento de averías de infancia", type text)
    in
        Added_Aperturas,

    Altas_Mes_Anterior = let
        Source = ProduccionTecnicos,
        Filtered_Extension = Table.SelectRows(Source, each ([Extension] = ".txt")),
        Filtered_Folder_Path = Table.SelectRows(Filtered_Extension, each Text.Contains([Folder Path], "\CalculoBonificacion\Altas Mes Anterior\")),
        Added_Year = Table.AddColumn(Filtered_Folder_Path, "Año", each Text.BetweenDelimiters([Name], "_", ".", 1, 0), type text),
        Added_Mes = Table.AddColumn(Added_Year, "Mes", each Text.BetweenDelimiters([Name], "_", "_"), type text),
        Changed_Type_Date = Table.TransformColumnTypes(Added_Mes,{{"Año", Int64.Type}, {"Mes", Int64.Type}}),
        Merged_Mes_Actu = Table.NestedJoin(Changed_Type_Date, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Name = Table.SelectRows(Merged_Mes_Actu, each [Name] <> null and [Name] <> ""),
        Transform_Content = Table.TransformColumns(Filtered_Null_Name, {"Content", each Csv.Document(_,[Delimiter="Õ", Columns=26, Encoding=1252, QuoteStyle=QuoteStyle.None])}),
        Expanded_Content = Transform_Content{0}[Content],
        Filtered_Separador = Table.SelectRows(Expanded_Content, each not Text.Contains([Column1], "-")),
        Filtered_Null_Column2 = Table.SelectRows(Filtered_Separador, each [Column2] <> null and [Column2] <> ""),
        Promoted_Headers = Table.PromoteHeaders(Filtered_Null_Column2, [PromoteAllScalars=true]),
        Filtered_Null_Fecha = Table.SelectRows(Promoted_Headers, each [Fecha_de_cierre_final] <> null and [Fecha_de_cierre_final] <> ""),
        Transform_Fecha = Table.TransformColumns(Filtered_Null_Fecha,{{"Fecha_de_cierre_final", each Date.From(Value.FromText(_)), type date}}),
        Removed_Other_Columns = Table.SelectColumns(Transform_Fecha,{"Numero_de_actuacion", "Subtipo_de_orden", "Pet_atis", "Departamento", "Fecha_de_cierre_final", "BA", "IP_TV", "external_id", "Medio_de_Acceso"}),
        Added_Year_2 = Table.AddColumn(Removed_Other_Columns, "Año", each Date.Year(Date.AddMonths(DateTime.From([Fecha_de_cierre_final]), 1)), Int64.Type),
        Added_Mes_2 = Table.AddColumn(Added_Year_2, "Mes", each Date.Month(Date.AddMonths(DateTime.From([Fecha_de_cierre_final]), 1)), Int64.Type),
        Replaced_NULL_null = Table.ReplaceValue(Added_Mes_2,"NULL",null,Replacer.ReplaceValue,{"Numero_de_actuacion", "Subtipo_de_orden", "Pet_atis", "Departamento", "BA", "IP_TV", "external_id", "Medio_de_Acceso"}),
        Changed_Type = Table.TransformColumnTypes(Replaced_NULL_null,{{"Numero_de_actuacion", type text}, {"Subtipo_de_orden", type text}, {"Pet_atis", type text}, {"Departamento", type text}, {"Fecha_de_cierre_final", type date}, {"BA", type text}, {"IP_TV", type text}, {"external_id", type text}, {"Medio_de_Acceso", type text}}),
        Trimmed_Text = Table.TransformColumns(Changed_Type,{{"Medio_de_Acceso", Text.Trim, type text}, {"external_id", Text.Trim, type text}, {"IP_TV", Text.Trim, type text}, {"BA", Text.Trim, type text}, {"Departamento", Text.Trim, type text}, {"Pet_atis", Text.Trim, type text}, {"Subtipo_de_orden", Text.Trim, type text}, {"Numero_de_actuacion", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"Medio_de_Acceso", Text.Clean, type text}, {"external_id", Text.Clean, type text}, {"IP_TV", Text.Clean, type text}, {"BA", Text.Clean, type text}, {"Departamento", Text.Clean, type text}, {"Pet_atis", Text.Clean, type text}, {"Subtipo_de_orden", Text.Clean, type text}, {"Numero_de_actuacion", Text.Clean, type text}}),
        Capitalized_Each_Word = Table.TransformColumns(Cleaned_Text,{{"Departamento", Text.Proper, type text}}),
        Renamed_Columns = Table.RenameColumns(Capitalized_Each_Word,{{"Numero_de_actuacion", "ATiempo"}, {"Pet_atis", "Atis"}, {"Fecha_de_cierre_final", "Fecha"}}),
        Filtered_Null_Atis = Table.SelectRows(Renamed_Columns, each [Atis] <> null and [Atis] <> ""),
        Filtered_Null_CC_Tec = Table.SelectRows(Filtered_Null_Atis, each [external_id] <> null and [external_id] <> ""),
        Merged_Tbl_Departamentos = Table.NestedJoin(Filtered_Null_CC_Tec, {"Departamento"}, Tbl_Departamentos, {"Departamento"}, "TblDepartamentos", JoinKind.RightOuter),
        Filtered_Null_Dep = Table.SelectRows(Merged_Tbl_Departamentos, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Columns = Table.RemoveColumns(Filtered_Null_Dep,{"TblDepartamentos"}),
        Added_LB_BA = Table.AddColumn(Removed_Columns, "LB+BA", each if([Subtipo_de_orden]="ALTALB") or ([Subtipo_de_orden]="TRASLADOLB")then(1)else(if([BA]="BA") and ([Medio_de_Acceso]="COBRE")then(1)else(0)), type number),
        Added_IPTV = Table.AddColumn(Added_LB_BA, "TV (IPTV)", each if([IP_TV]="IP_TV")then(1)else(0), type number),
        Added_FTTH = Table.AddColumn(Added_IPTV, "FTTH", each if([BA]="BA") and ([Medio_de_Acceso]="FIBRA") then(1)else(0), type number),
        Unpivoted_Productos = Table.Unpivot(Added_FTTH, {"LB+BA", "TV (IPTV)", "FTTH"}, "Productos", "Cumple"),
        Removed_Duplicates = Table.Distinct(Unpivoted_Productos),
        Removed_Other_Columns_Fin = Table.SelectColumns(Removed_Duplicates,{"ATiempo", "Atis", "Departamento", "Fecha", "external_id", "Año", "Mes", "Productos", "Cumple"})
    in
        Removed_Other_Columns_Fin,

    ISN_Alta = let
        Source = ProduccionTecnicos,
        Filtered_Extension = Table.SelectRows(Source, each ([Extension] = ".txt")),
        Filtered_Folder_Path = Table.SelectRows(Filtered_Extension, each Text.Contains([Folder Path], "\CalculoBonificacion\ISN_Altas\")),
        Added_Year = Table.AddColumn(Filtered_Folder_Path, "Año", each Text.BetweenDelimiters([Name], "_", ".", 1, 0), type text),
        Added_Mes = Table.AddColumn(Added_Year, "Mes", each Text.BetweenDelimiters([Name], "_", "_"), type text),
        Changed_Type_Date = Table.TransformColumnTypes(Added_Mes,{{"Año", Int64.Type}, {"Mes", Int64.Type}}),
        Merged_Mes_Actu = Table.NestedJoin(Changed_Type_Date, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Name = Table.SelectRows(Merged_Mes_Actu, each [Name] <> null and [Name] <> ""),
        Transform_Content = Table.TransformColumns(Filtered_Null_Name, {"Content", each Csv.Document(_,[Delimiter="Õ", Columns=11, Encoding=1252, QuoteStyle=QuoteStyle.None])}),
        Expanded_Content = Transform_Content{0}[Content],
        Filtered_Separador = Table.SelectRows(Expanded_Content, each not Text.Contains([Column1], "-")),
        Filtered_Null_Column2 = Table.SelectRows(Filtered_Separador, each [Column2] <> null and [Column2] <> ""),
        Promoted_Headers = Table.PromoteHeaders(Filtered_Null_Column2, [PromoteAllScalars=true]),
        Removed_Other_Columns = Table.SelectColumns(Promoted_Headers,{"Departamento", "Num Empleado", "Pregunta3", "conteo", "MES_ENCUESTA", "AÑO_ENCUESTA"}),
        Changed_Type = Table.TransformColumnTypes(Removed_Other_Columns,{{"Departamento", type text}, {"Num Empleado", type text}, {"Pregunta3", type text}, {"conteo", Int64.Type}, {"MES_ENCUESTA", Int64.Type}, {"AÑO_ENCUESTA", Int64.Type}}),
        Trimmed_Text = Table.TransformColumns(Changed_Type,{{"Departamento", Text.Trim, type text}, {"Num Empleado", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"Departamento", Text.Clean, type text}, {"Num Empleado", Text.Clean, type text}}),
        Capitalized_Each_Word = Table.TransformColumns(Cleaned_Text,{{"Departamento", Text.Proper, type text}}),
        Renamed_Columns = Table.RenameColumns(Capitalized_Each_Word,{{"Num Empleado", "external_id"}, {"conteo", "Cantidad"}, {"MES_ENCUESTA", "Mes"}, {"AÑO_ENCUESTA", "Año"}}),
        Filtered_Null_CC_Tec = Table.SelectRows(Renamed_Columns, each [external_id] <> null and [external_id] <> ""),
        Merged_Tbl_Departamentos = Table.NestedJoin(Filtered_Null_CC_Tec, {"Departamento"}, Tbl_Departamentos, {"Departamento"}, "TblDepartamentos", JoinKind.RightOuter),
        Filtered_Null_Dep = Table.SelectRows(Merged_Tbl_Departamentos, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Columns = Table.RemoveColumns(Filtered_Null_Dep,{"TblDepartamentos"}),
        Pivoted_Pregunta3 = Table.Pivot(Removed_Columns, List.Distinct(Removed_Columns[Pregunta3]), "Pregunta3", "Cantidad", List.Sum),
        Replaced_Null_01 = try(Table.ReplaceValue(Pivoted_Pregunta3,null,0,Replacer.ReplaceValue,{"1"})) otherwise (Table.AddColumn(Pivoted_Pregunta3, "1", each 0, type number)),
        Replaced_Null_02 = try(Table.ReplaceValue(Replaced_Null_01,null,0,Replacer.ReplaceValue,{"2"})) otherwise (Table.AddColumn(Replaced_Null_01, "2", each 0, type number)),
        Replaced_Null_03 = try(Table.ReplaceValue(Replaced_Null_02,null,0,Replacer.ReplaceValue,{"3"})) otherwise (Table.AddColumn(Replaced_Null_02, "3", each 0, type number)),
        Replaced_Null_04 = try(Table.ReplaceValue(Replaced_Null_03,null,0,Replacer.ReplaceValue,{"4"})) otherwise (Table.AddColumn(Replaced_Null_03, "4", each 0, type number)),
        Replaced_Null_05 = try(Table.ReplaceValue(Replaced_Null_04,null,0,Replacer.ReplaceValue,{"5"})) otherwise (Table.AddColumn(Replaced_Null_04, "5", each 0, type number)),
        Added_Cumple = Table.AddColumn(Replaced_Null_05, "Cumple", each [4] + [5], type number),
        Added_No_Cumple = Table.AddColumn(Added_Cumple, "No Cumple", each [1] + [2], type number),
        Added_Total = Table.AddColumn(Added_No_Cumple, "Total", each List.Sum({[1], [2], [3], [4], [5]}), type number),
        Added_Aperturas = Table.AddColumn(Added_Total, "Aperturas", each "ISN", type text),
        Added_Productos = Table.AddColumn(Added_Aperturas, "Productos", each "TOTAL", type text),
        Removed_Duplicates = Table.Distinct(Added_Productos),
        Removed_Columns_Numero = Table.RemoveColumns(Removed_Duplicates,{"3", "5", "2", "4", "1"})
    in
        Removed_Columns_Numero,

    ISN_Mtto = let
        Source = ProduccionTecnicos,
        Filtered_Extension = Table.SelectRows(Source, each ([Extension] = ".txt")),
        Filtered_Folder_Path = Table.SelectRows(Filtered_Extension, each Text.Contains([Folder Path], "\CalculoBonificacion\ISN_Mtto\")),
        Added_Year = Table.AddColumn(Filtered_Folder_Path, "Año", each Text.BetweenDelimiters([Name], "_", ".", 1, 0), type text),
        Added_Mes = Table.AddColumn(Added_Year, "Mes", each Text.BetweenDelimiters([Name], "_", "_"), type text),
        Changed_Type_Date = Table.TransformColumnTypes(Added_Mes,{{"Año", Int64.Type}, {"Mes", Int64.Type}}),
        Merged_Mes_Actu = Table.NestedJoin(Changed_Type_Date, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Name = Table.SelectRows(Merged_Mes_Actu, each [Name] <> null and [Name] <> ""),
        Transform_Content = Table.TransformColumns(Filtered_Null_Name, {"Content", each Csv.Document(_,[Delimiter="Õ", Columns=10, Encoding=1252, QuoteStyle=QuoteStyle.None])}),
        Expanded_Content = Transform_Content{0}[Content],
        Filtered_Separador = Table.SelectRows(Expanded_Content, each not Text.Contains([Column1], "-")),
        Filtered_Null_Column2 = Table.SelectRows(Filtered_Separador, each [Column2] <> null and [Column2] <> ""),
        Promoted_Headers = Table.PromoteHeaders(Filtered_Null_Column2, [PromoteAllScalars=true]),
        Removed_Other_Columns = Table.SelectColumns(Promoted_Headers,{"Departamento", "Num Empleado", "Pregunta3", "CONTEO", "MES_ENCUESTA", "AÑO_ENCUESTA"}),
        Changed_Type = Table.TransformColumnTypes(Removed_Other_Columns,{{"Departamento", type text}, {"Num Empleado", type text}, {"Pregunta3", type text}, {"CONTEO", Int64.Type}, {"MES_ENCUESTA", Int64.Type}, {"AÑO_ENCUESTA", Int64.Type}}),
        Trimmed_Text = Table.TransformColumns(Changed_Type,{{"Departamento", Text.Trim, type text}, {"Num Empleado", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"Departamento", Text.Clean, type text}, {"Num Empleado", Text.Clean, type text}}),
        Capitalized_Each_Word = Table.TransformColumns(Cleaned_Text,{{"Departamento", Text.Proper, type text}}),
        Renamed_Columns = Table.RenameColumns(Capitalized_Each_Word,{{"Num Empleado", "external_id"}, {"CONTEO", "Cantidad"}, {"MES_ENCUESTA", "Mes"}, {"AÑO_ENCUESTA", "Año"}}),
        Filtered_Null_CC_Tec = Table.SelectRows(Renamed_Columns, each [external_id] <> null and [external_id] <> ""),
        Merged_Tbl_Departamentos = Table.NestedJoin(Filtered_Null_CC_Tec, {"Departamento"}, Tbl_Departamentos, {"Departamento"}, "TblDepartamentos", JoinKind.RightOuter),
        Filtered_Null_Dep = Table.SelectRows(Merged_Tbl_Departamentos, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Columns = Table.RemoveColumns(Filtered_Null_Dep,{"TblDepartamentos"}),
        Pivoted_Pregunta3 = Table.Pivot(Removed_Columns, List.Distinct(Removed_Columns[Pregunta3]), "Pregunta3", "Cantidad", List.Sum),
        Replaced_Null_01 = try(Table.ReplaceValue(Pivoted_Pregunta3,null,0,Replacer.ReplaceValue,{"1"})) otherwise (Table.AddColumn(Pivoted_Pregunta3, "1", each 0, type number)),
        Replaced_Null_02 = try(Table.ReplaceValue(Replaced_Null_01,null,0,Replacer.ReplaceValue,{"2"})) otherwise (Table.AddColumn(Replaced_Null_01, "2", each 0, type number)),
        Replaced_Null_03 = try(Table.ReplaceValue(Replaced_Null_02,null,0,Replacer.ReplaceValue,{"3"})) otherwise (Table.AddColumn(Replaced_Null_02, "3", each 0, type number)),
        Replaced_Null_04 = try(Table.ReplaceValue(Replaced_Null_03,null,0,Replacer.ReplaceValue,{"4"})) otherwise (Table.AddColumn(Replaced_Null_03, "4", each 0, type number)),
        Replaced_Null_05 = try(Table.ReplaceValue(Replaced_Null_04,null,0,Replacer.ReplaceValue,{"5"})) otherwise (Table.AddColumn(Replaced_Null_04, "5", each 0, type number)),
        Added_Cumple = Table.AddColumn(Replaced_Null_05, "Cumple", each [4] + [5], type number),
        Added_No_Cumple = Table.AddColumn(Added_Cumple, "No Cumple", each [1] + [2], type number),
        Added_Total = Table.AddColumn(Added_No_Cumple, "Total", each List.Sum({[1], [2], [3], [4], [5]}), type number),
        Added_Aperturas = Table.AddColumn(Added_Total, "Aperturas", each "ISN MTTO", type text),
        Added_Productos = Table.AddColumn(Added_Aperturas, "Productos", each "TOTAL", type text),
        Removed_Duplicates = Table.Distinct(Added_Productos),
        Removed_Columns_Numero = Table.RemoveColumns(Removed_Duplicates,{"3", "5", "2", "4", "1"})
    in
        Removed_Columns_Numero,

    Detalle_Bonificacion = let
        Source = Table.Combine({Cumplimiento_Citas, Plazo_3_Dias, Plazos, Reitero, Infancia, ISN_Alta, ISN_Mtto}),
        Indicadores = Tabla_Indicadores,
        Merged_Source = Table.NestedJoin(Indicadores, {"Aperturas", "Productos", "Año", "Mes"}, Source, {"Aperturas", "Productos", "Año", "Mes"}, "IndicadoresEstado", JoinKind.LeftOuter),
        Expanded_Source = Table.ExpandTableColumn(Merged_Source, "IndicadoresEstado", {"Fecha", "Atis", "Departamento", "ATiempo", "external_id", "Cumple", "No Cumple", "Total"}, {"Fecha", "Atis", "Departamento", "ATiempo", "external_id", "Cumple", "No Cumple", "Total"}),
        Replaced_No_Cumple = Table.ReplaceValue(Expanded_Source,0, each if(([Año]=2023)and([Mes]=1)and([Corto]="Inf LBBA"))then([Nota 75])else(0),Replacer.ReplaceValue,{"No Cumple"}),
        Replaced_Cumple = Table.ReplaceValue(Replaced_No_Cumple,0, each if(([Año]=2023)and([Mes]=1)and([Corto]="Inf LBBA"))then(1)else(0),Replacer.ReplaceValue,{"Cumple"}),
        Changed_Type_Cumple_Y_No = Table.TransformColumnTypes(Replaced_Cumple,{{"Cumple", type number}, {"No Cumple", type number}}),
        Merged_Parametro_Nota = Table.NestedJoin(Changed_Type_Cumple_Y_No, {"Año", "Mes"}, Parametro_Nota, {"Año", "Mes"}, "Parametro_Nota", JoinKind.LeftOuter),
        Expanded_Parametro_Nota = Table.ExpandTableColumn(Merged_Parametro_Nota, "Parametro_Nota", {"VrPenalAlta", "VrPenalMtto"}, {"VrPenalAlta", "VrPenalMtto"}),
        Added_Mes_Año = Table.AddColumn(Expanded_Parametro_Nota, "Mes Año", each Text.From([Mes]) & " " & Text.From([Año]), type text),
        Merged_Accesos = Table.NestedJoin(Added_Mes_Año, {"external_id", "Año", "Mes", "Departamento"}, Cuadrillas_Bonificacion, {"CCTec", "Año", "Mes", "Departamento"}, "AccesosCuadrillas", JoinKind.LeftOuter),
        ExpandedAccesos =  Table.ExpandTableColumn(Merged_Accesos, "AccesosCuadrillas", {"Acceso", "Cargo", "Lineas", "Contrata", "Nom Tec", "Nom Gestor", "Nom Super"}, {"Acceso", "Cargo", "Lineas", "Contrata", "Nom Tec", "Nom Gestor", "Nom Super"}),
        Replaced_Null_Lineas = Table.ReplaceValue(ExpandedAccesos,null,1,Replacer.ReplaceValue,{"Lineas"}),
        Inserted_Division_Cumple = Table.AddColumn(Replaced_Null_Lineas, "Cumple_2", each [Cumple] / [Lineas], type number),
        Inserted_Division_No_Cumple = Table.AddColumn(Inserted_Division_Cumple, "No Cumple_2", each [No Cumple] / [Lineas], type number),
        Removed_Original_Cumple_y_No = Table.RemoveColumns(Inserted_Division_No_Cumple,{"Cumple", "No Cumple", "Lineas"}),
        Renamed_Columns_Cumple_y_No = Table.RenameColumns(Removed_Original_Cumple_y_No,{{"Cumple_2", "Cumple"}, {"No Cumple_2", "No Cumple"}}),
        Replaced_Null_Cargo = Table.ReplaceValue(Renamed_Columns_Cumple_y_No,null,"Admin",Replacer.ReplaceValue,{"Cargo"}),
        Replaced_Null_Acceso = Table.ReplaceValue(Replaced_Null_Cargo,null,"9999999999",Replacer.ReplaceValue,{"Acceso"}),
        Replaced_Null_Cuadrillas = Table.ReplaceValue(Replaced_Null_Acceso,null,"Liteyca",Replacer.ReplaceValue,{"Nom Gestor", "Nom Super", "Nom Tec", "Contrata"}),
        Removed_Duplicates = Table.Distinct(Replaced_Null_Cuadrillas),
        Filtered__Null_No_Cumple = Table.SelectRows(Removed_Duplicates, each [No Cumple] <> "" or [No Cumple] <> null),
        Grouped_Rows_No_Cumple = Table.Group(Filtered__Null_No_Cumple, {"Aperturas", "Productos", "Departamento", "Acceso", "Año", "Mes"}, {{"Penaliza", each List.Average([Penaliza]), type nullable number}, {"PesoPenaliza", each List.Average([PesoPenaliza]), type nullable number}, {"Cumple", each List.Sum([Cumple]), type nullable number}, {"NoCumple", each List.Sum([No Cumple]), type nullable number}, {"Total", each List.Sum([Total]), type nullable number}, {"VrPenalAlta", each List.Average([VrPenalAlta]), type nullable number}, {"VrPenalMtto", each List.Average([VrPenalMtto]), type nullable number}, {"All", each _, type table [Aperturas=text, Productos=text, Nota 0=nullable number, Nota 75=nullable number, Nota 10=nullable number, Penaliza=nullable number, PesoPenaliza=nullable number, PESO=nullable number, Sin Nota=nullable number, Corto=nullable text, Año=nullable number, Mes=nullable number, Fecha=nullable date, Atis=nullable text, Departamento=nullable text, ATiempo=nullable text, external_id=nullable text, Cumple=nullable number, No Cumple=nullable number, Total=nullable number, VrPenalAlta=nullable number, VrPenalMtto=nullable number, Mes Año=text, Nom Gestor=nullable text, Nom Super=nullable text, Acceso=nullable text, Cargo=nullable text, Nom Tec=nullable text, Contrata=nullable text]}}),
        Added_Cumplimiento_No_Cumple = Table.AddColumn(Grouped_Rows_No_Cumple, "%Cumplimiento", each if([Aperturas]="ISN") or([Aperturas]="ISN MTTO")then(([Cumple]/[Total])-([NoCumple]/[Total]))else(if([Aperturas]="Cumplimiento de averías de infancia") or([Aperturas]="Averías reiteradas")then(if(([Cumple]+[NoCumple])=0)then(null)else(if([Cumple]=0)then(1)else([NoCumple]/[Cumple])))else([Cumple]/([Cumple]+[NoCumple]))), type number),
        Added_Cant_Penalizada = Table.AddColumn(Added_Cumplimiento_No_Cumple, "Cant Penailzada", each if([Penaliza]=null)then(0)else(if([Aperturas]="ISN")then([NoCumple]*[PesoPenaliza])else(if([Aperturas]="Cumplimiento de citas")then(if([#"%Cumplimiento"]>=[Penaliza])then(0)else([NoCumple]*[PesoPenaliza]))else(if([Aperturas]="Plazos de Mtto")then(if([#"%Cumplimiento"]>=[Penaliza])then(0)else([NoCumple]-([PesoPenaliza]*([Cumple]+[NoCumple]))))else(if([#"%Cumplimiento"]<=[Penaliza])then(0)else([NoCumple]-([PesoPenaliza]*[Cumple])))))), type number),
        Removed_Other_Columns_No_Cumple = Table.SelectColumns(Added_Cant_Penalizada,{"Aperturas", "Productos", "Departamento", "Acceso", "Año", "Mes", "Penaliza", "PesoPenaliza", "VrPenalAlta", "VrPenalMtto", "All", "%Cumplimiento", "Cant Penailzada"}),
        Expanded_All = Table.ExpandTableColumn(Removed_Other_Columns_No_Cumple, "All", {"Nota 0", "Nota 75", "Nota 10", "PESO", "Sin Nota", "Corto", "Fecha", "Atis", "ATiempo", "external_id", "Cumple", "No Cumple", "Total", "Mes Año", "Nom Gestor", "Nom Super", "Cargo", "Nom Tec", "Contrata"}, {"Nota 0", "Nota 75", "Nota 10", "PESO", "Sin Nota", "Corto", "Fecha", "Atis", "ATiempo", "external_id", "Cumple", "No Cumple", "Total", "Mes Año", "Nom Gest", "Nom Super", "Cargo", "Nom Tec", "Contrata"}),
        Filtered_Rows_No_Cumple = Table.SelectRows(Expanded_All, each [No Cumple] <> 0),
        Added_Index = Table.AddIndexColumn(Filtered_Rows_No_Cumple, "Índice", 1, 1, Int64.Type),
        Added_Es_Penalizada_No_Cumple = Table.AddColumn(Added_Index, "Es Penalizada", each if([Cant Penailzada]=null)then(false)else(if([Índice]<=[Cant Penailzada])then(true)else(false)), type logical),
        Removed_Other_Columns_No_Cumple_Final = Table.SelectColumns(Added_Es_Penalizada_No_Cumple,{"Aperturas", "Productos", "Departamento", "Acceso", "Año", "Mes", "Penaliza", "PesoPenaliza", "VrPenalAlta", "VrPenalMtto", "Nota 0", "Nota 75", "Nota 10", "PESO", "Sin Nota", "Corto", "Fecha", "Atis", "ATiempo", "external_id", "Cumple", "No Cumple", "Total", "Mes Año", "Nom Gest", "Nom Super", "Cargo", "Nom Tec", "Es Penalizada"}),
    //Se retoma desde Expanded_All
        Filtered_Rows_Cumple = Table.SelectRows(Expanded_All, each [No Cumple] = 0),
        Added_Es_Penalizada_Cumple = Table.AddColumn(Filtered_Rows_Cumple, "Es Penalizada", each false, type logical),
    //Se combianan los pasos Added_Es_Penalizada_Cumple con Removed_Other_Columns_No_Cumple_Final
        Appended_Querys = Table.Combine({Added_Es_Penalizada_Cumple, Removed_Other_Columns_No_Cumple_Final}),
        Errores_Reemplazados = Table.ReplaceErrorValues(Appended_Querys, {{"Es Penalizada", false}})
    in
        Errores_Reemplazados,

    Tabla_Indicadores = let
        Source = Tablas_Base,
        Filtered_Rows = Source{[Item="TblFD"]}[Data],
        Trimmed_Text = Table.TransformColumns(Filtered_Rows,{{"Aperturas", Text.Trim, type text}, {"Productos", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"Aperturas", Text.Clean, type text}, {"Productos", Text.Clean, type text}}),
        Invoke_fxCalendario_Mes = fxMiCalendarioMes(Cleaned_Text, "FechaInicio", "FechaFin"),
        Merged_Mes_Act = Table.NestedJoin(Invoke_fxCalendario_Mes, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Corto = Table.SelectRows(Merged_Mes_Act, each [Corto] <> null and [Corto] <> ""),
        Removed_Column_Mes_Act = Table.RemoveColumns(Filtered_Null_Corto,{"Mes_Actualizar"})
    in
        Removed_Column_Mes_Act,

    Parametro_Nota = let
        Source = Tablas_Base,
        Filtered_Rows = Source{[Item="ParametroNota"]}[Data],
        Invoke_fxCalendario_Mes = fxMiCalendarioMes(Filtered_Rows, "FechaInicio", "FechaFin"),
        Merged_Mes_Act = Table.NestedJoin(Invoke_fxCalendario_Mes, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Removed_Column_Mes_Act = Table.RemoveColumns(Merged_Mes_Act,{"Mes_Actualizar"}),
        Removed_Duplicates = Table.Distinct(Removed_Column_Mes_Act)
    in
        Removed_Duplicates,

    AccesosCuadrillas_2 = let
        Source = Tablas_Base,
        Filtered_Rows = Source{[Item="AccesosCuadrillas_2"]}[Data],
        Trimmed_Text = Table.TransformColumns(Filtered_Rows,{{"Area Cuadri", Text.Trim, type text}, {"Nom Super", Text.Trim, type text}, {"Nom Gestor", Text.Trim, type text}, {"Nom Tec", Text.Trim, type text}, {"Contrata", Text.Trim, type text}, {"Departamento", Text.Trim, type text}, {"Cargo", Text.Trim, type text}}),
        Cleaned_Text = Table.TransformColumns(Trimmed_Text,{{"Area Cuadri", Text.Clean, type text}, {"Nom Super", Text.Clean, type text}, {"Nom Gestor", Text.Clean, type text}, {"Nom Tec", Text.Clean, type text}, {"Contrata", Text.Clean, type text}, {"Departamento", Text.Clean, type text}, {"Cargo", Text.Clean, type text}}),
        Capitalized_Each_Word = Table.TransformColumns(Cleaned_Text,{{"Area Cuadri", Text.Proper, type text}, {"Nom Super", Text.Proper, type text}, {"Nom Gestor", Text.Proper, type text}, {"Nom Tec", Text.Proper, type text}, {"Contrata", Text.Proper, type text}, {"Departamento", Text.Proper, type text}, {"Cargo", Text.Proper, type text}}),
        Invoke_fxCalendario_Dia = fxMiCalendarioDia(Capitalized_Each_Word, "FechaMin", "FechaMax"),
        Merged_Mes_Act = Table.NestedJoin(Invoke_fxCalendario_Dia, {"Mes", "Año"}, Mes_Actualizar, {"Mes", "Año"}, "Mes_Actualizar", JoinKind.RightOuter),
        Filtered_Null_Departamento = Table.SelectRows(Merged_Mes_Act, each [Departamento] <> null and [Departamento] <> ""),
        Removed_Column_Mes_Act = Table.RemoveColumns(Filtered_Null_Departamento,{"Mes_Actualizar"})
    in
        Removed_Column_Mes_Act,

    Cuadrillas_Bonificacion = let
        Source = AccesosCuadrillas_2,
        Removed_Date = Table.RemoveColumns(Source,{"Fecha"}),
        Removed_Duplicates = Table.Distinct(Removed_Date),
        Grouped_Rows = Table.Group(Removed_Duplicates, {"CCTec", "Acceso", "Cargo", "Departamento", "Año", "Mes"}, {{"Lineas", each Table.RowCount(_), Int64.Type}, {"All", each _, type table [CCTec=nullable text, Acceso=nullable text, Cargo=text, Departamento=text, Contrata=text, Nom Tec=text, Nom Gestor=text, Nom Super=text, Area Cuadri=text, ApuCuadrilla=nullable number, Año=number, Mes=number]}}),
        Expanded_All = Table.ExpandTableColumn(Grouped_Rows, "All", {"Contrata", "Nom Tec", "Nom Gestor", "Nom Super", "Area Cuadri", "ApuCuadrilla"}, {"Contrata", "Nom Tec", "Nom Gestor", "Nom Super", "Area Cuadri", "ApuCuadrilla"})
    in
        Expanded_All
in
    Detalle_Bonificacion